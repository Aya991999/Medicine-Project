// <auto-generated />
using System;
using MVCFinalProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace medicineApi.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220820225111_inital")]
    partial class inital
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DBMedicine.Models.StudentSecondeRowMaterial", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("Material_Code")
                        .HasColumnType("nvarchar(10)");

                    b.Property<float>("Relase")
                        .HasColumnType("real");

                    b.Property<int>("Second_Row_ID")
                        .HasColumnType("int");

                    b.Property<string>("Std_National_ID")
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("Material_Code");

                    b.HasIndex("Second_Row_ID");

                    b.HasIndex("Std_National_ID", "Material_Code", "Second_Row_ID")
                        .IsUnique()
                        .HasFilter("[Std_National_ID] IS NOT NULL AND [Material_Code] IS NOT NULL");

                    b.ToTable("StudentSecondeRowMaterials");
                });

            modelBuilder.Entity("DBMedicine.Models.StudentSummerMaterial", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<float>("Achivement_File")
                        .HasColumnType("real");

                    b.Property<bool>("IsExam")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("bit");

                    b.Property<float>("Lab")
                        .HasColumnType("real");

                    b.Property<string>("Material_Code")
                        .HasColumnType("nvarchar(10)");

                    b.Property<float>("Relase")
                        .HasColumnType("real");

                    b.Property<string>("Std_National_ID")
                        .HasColumnType("nvarchar(14)");

                    b.Property<int>("Summer_ID")
                        .HasColumnType("int");

                    b.Property<float>("TotalGrade")
                        .HasColumnType("real");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Year_Work")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.HasIndex("Material_Code");

                    b.HasIndex("Summer_ID");

                    b.HasIndex("Std_National_ID", "Material_Code", "Summer_ID")
                        .IsUnique()
                        .HasFilter("[Std_National_ID] IS NOT NULL AND [Material_Code] IS NOT NULL");

                    b.ToTable("StudentSummerMaterials");
                });

            modelBuilder.Entity("MVCFinalProject.Models.Doctors", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("National_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("birthDay")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("MVCFinalProject.Models.Materials", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Doctor_ID")
                        .HasColumnType("int");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.Property<string>("Semster")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("total_gride")
                        .HasColumnType("real");

                    b.HasKey("Code");

                    b.HasIndex("Doctor_ID");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("MVCFinalProject.Models.Second_Row", b =>
                {
                    b.Property<int>("Second_Row_ID")
                        .HasColumnType("int");

                    b.HasKey("Second_Row_ID");

                    b.ToTable("Second_Rows");
                });

            modelBuilder.Entity("MVCFinalProject.Models.StudentMaterials", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<float>("Achivement_File")
                        .HasColumnType("real");

                    b.Property<bool>("ISExam")
                        .HasColumnType("bit");

                    b.Property<float>("Lab")
                        .HasColumnType("real");

                    b.Property<string>("Matrial_Code")
                        .HasColumnType("nvarchar(10)");

                    b.Property<float>("Relase")
                        .HasColumnType("real");

                    b.Property<string>("Std_National_ID")
                        .HasColumnType("nvarchar(14)");

                    b.Property<float>("TotalGrade")
                        .HasColumnType("real");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Year_Work")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.HasIndex("Matrial_Code");

                    b.HasIndex("Std_National_ID");

                    b.ToTable("StudentMaterials");
                });

            modelBuilder.Entity("MVCFinalProject.Models.Summer", b =>
                {
                    b.Property<int>("Summer_ID")
                        .HasColumnType("int");

                    b.HasKey("Summer_ID");

                    b.ToTable("Summers");
                });

            modelBuilder.Entity("MVCFinalProject.Models.User", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("National_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("code");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MVCFinalProject.Views.Student", b =>
                {
                    b.Property<string>("National_ID")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birth_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Certification_Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Full_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gover")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("High_School_Grade")
                        .HasColumnType("real");

                    b.Property<string>("Identification_Card")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsNew")
                        .HasColumnType("bit");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Personal_Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phone_Number")
                        .HasMaxLength(11)
                        .HasColumnType("int");

                    b.Property<string>("Recruitment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Semster")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sitting_Number")
                        .HasColumnType("int");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("acadimic_advisor")
                        .HasColumnType("int");

                    b.HasKey("National_ID");

                    b.HasIndex("acadimic_advisor");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("DBMedicine.Models.StudentSecondeRowMaterial", b =>
                {
                    b.HasOne("MVCFinalProject.Models.Materials", "Materials")
                        .WithMany()
                        .HasForeignKey("Material_Code");

                    b.HasOne("MVCFinalProject.Models.Second_Row", "Second_Row")
                        .WithMany()
                        .HasForeignKey("Second_Row_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCFinalProject.Views.Student", "Students")
                        .WithMany("StudentSecondeRowMaterials")
                        .HasForeignKey("Std_National_ID");

                    b.Navigation("Materials");

                    b.Navigation("Second_Row");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("DBMedicine.Models.StudentSummerMaterial", b =>
                {
                    b.HasOne("MVCFinalProject.Models.Materials", "Materials")
                        .WithMany()
                        .HasForeignKey("Material_Code");

                    b.HasOne("MVCFinalProject.Views.Student", "Students")
                        .WithMany("StudentSummerMaterials")
                        .HasForeignKey("Std_National_ID");

                    b.HasOne("MVCFinalProject.Models.Summer", "Summer")
                        .WithMany()
                        .HasForeignKey("Summer_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Materials");

                    b.Navigation("Students");

                    b.Navigation("Summer");
                });

            modelBuilder.Entity("MVCFinalProject.Models.Materials", b =>
                {
                    b.HasOne("MVCFinalProject.Models.Doctors", "Doctors")
                        .WithMany("Materials")
                        .HasForeignKey("Doctor_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctors");
                });

            modelBuilder.Entity("MVCFinalProject.Models.StudentMaterials", b =>
                {
                    b.HasOne("MVCFinalProject.Models.Materials", "Materials")
                        .WithMany("StudentMaterials")
                        .HasForeignKey("Matrial_Code");

                    b.HasOne("MVCFinalProject.Views.Student", "Student")
                        .WithMany("StudentMaterials")
                        .HasForeignKey("Std_National_ID");

                    b.Navigation("Materials");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("MVCFinalProject.Views.Student", b =>
                {
                    b.HasOne("MVCFinalProject.Models.Doctors", "Doctors")
                        .WithMany("Students")
                        .HasForeignKey("acadimic_advisor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctors");
                });

            modelBuilder.Entity("MVCFinalProject.Models.Doctors", b =>
                {
                    b.Navigation("Materials");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("MVCFinalProject.Models.Materials", b =>
                {
                    b.Navigation("StudentMaterials");
                });

            modelBuilder.Entity("MVCFinalProject.Views.Student", b =>
                {
                    b.Navigation("StudentMaterials");

                    b.Navigation("StudentSecondeRowMaterials");

                    b.Navigation("StudentSummerMaterials");
                });
#pragma warning restore 612, 618
        }
    }
}
